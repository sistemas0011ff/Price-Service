plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12' //'3.2.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
}

group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.modelmapper:modelmapper:2.3.8'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.+'
    testImplementation 'org.springframework.boot:spring-boot-starter-web'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
        csv.required.set(false)
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
    }
}

tasks.named('test') {
    finalizedBy 'jacocoTestReport'
}

tasks.named('build') {
    dependsOn 'jacocoTestCoverageVerification'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}